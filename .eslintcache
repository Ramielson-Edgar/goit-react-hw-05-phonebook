[{"E:\\Development\\goit-react-hw-02-phonebook\\src\\index.js":"1","E:\\Development\\goit-react-hw-02-phonebook\\src\\App.js":"2","E:\\Development\\goit-react-hw-02-phonebook\\src\\Phonebook\\Filter\\index.js":"3","E:\\Development\\goit-react-hw-02-phonebook\\src\\Phonebook\\ContactList\\index.js":"4","E:\\Development\\goit-react-hw-02-phonebook\\src\\Phonebook\\ContactForm\\index.js":"5","E:\\Development\\goit-react-hw-02-phonebook\\src\\Phonebook\\ContactForm\\ContactForm.js":"6","E:\\Development\\goit-react-hw-02-phonebook\\src\\Phonebook\\Filter\\Filter.js":"7","E:\\Development\\goit-react-hw-02-phonebook\\src\\Phonebook\\ContactList\\ContactList.js":"8","E:\\Development\\goit-react-hw-02-phonebook\\src\\Phonebook\\IconButton\\IconButton.js":"9","E:\\Development\\goit-react-hw-02-phonebook\\src\\Phonebook\\MyPnotify\\MyPnotify.js":"10","E:\\Development\\goit-react-hw-02-phonebook\\src\\Container\\index.js":"11","E:\\Development\\goit-react-hw-02-phonebook\\src\\Container\\Container.js":"12"},{"size":267,"mtime":1611224345501,"results":"13","hashOfConfig":"14"},{"size":3043,"mtime":1616426035390,"results":"15","hashOfConfig":"14"},{"size":37,"mtime":1611899887182,"results":"16","hashOfConfig":"14"},{"size":42,"mtime":1611899950963,"results":"17","hashOfConfig":"14"},{"size":42,"mtime":1612037030556,"results":"18","hashOfConfig":"14"},{"size":2293,"mtime":1616410853991,"results":"19","hashOfConfig":"14"},{"size":1032,"mtime":1616424890024,"results":"20","hashOfConfig":"14"},{"size":1441,"mtime":1616424917565,"results":"21","hashOfConfig":"14"},{"size":663,"mtime":1615890793166,"results":"22","hashOfConfig":"14"},{"size":598,"mtime":1616425912973,"results":"23","hashOfConfig":"14"},{"size":40,"mtime":1616179964590,"results":"24","hashOfConfig":"14"},{"size":198,"mtime":1616180028518,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"c5rbot",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"E:\\Development\\goit-react-hw-02-phonebook\\src\\index.js",[],["52","53"],"E:\\Development\\goit-react-hw-02-phonebook\\src\\App.js",["54"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../src/bases.css';\nimport shortid from 'shortid';\nimport ContactForm from './Phonebook/ContactForm';\nimport ContactList from './Phonebook/ContactList';\nimport Filter from './Phonebook/Filter';\nimport MyPnotify from './Phonebook/MyPnotify/MyPnotify';\nimport { CSSTransition } from 'react-transition-group';\nimport './Alert.css';\nimport Container from './Container';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    isAlert: false,\n  };\n\n  componentDidMount() {\n    const presistedContacts = localStorage.getItem('contacts');\n    if (presistedContacts) {\n      this.setState({ contacts: JSON.parse(presistedContacts) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const numbers = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (contacts.find(item => item.name === name)) {\n      this.alert();\n      return;\n    }\n\n    this.setState(prevState => {\n      return {\n        contacts: [numbers, ...prevState.contacts],\n      };\n    });\n  };\n\n  handleChangeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisible = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(text =>\n      text.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  removeContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  alert = () => {\n    this.setState(state => ({\n      isAlert: !state.isAlert,\n    }));\n  };\n\n  render() {\n    const { filter, contacts, isAlert } = this.state;\n    const getVisibleContacts = this.getVisible();\n    const className = isAlert === true ? 'fade' : 'hide';\n    const hideAlert =\n      isAlert && setTimeout(() => this.setState({ isAlert: false }), 3000);\n\n    return (\n      <>\n        <MyPnotify className={className} hideAlert={hideAlert} />\n\n        <Container>\n          <ContactForm addContact={this.addContact} />\n\n          <Filter\n            contacts={contacts}\n            value={filter}\n            handleChangeFilter={this.handleChangeFilter}\n          />\n\n          <ContactList\n            contacts={getVisibleContacts}\n            onRemove={this.removeContact}\n          />\n        </Container>\n      </>\n    );\n  }\n}\nApp.propTypes = {\n  filter: PropTypes.string,\n  state: PropTypes.arrayOf(\n    PropTypes.shape({\n      contacts: PropTypes.string,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default App;\n","E:\\Development\\goit-react-hw-02-phonebook\\src\\Phonebook\\Filter\\index.js",[],"E:\\Development\\goit-react-hw-02-phonebook\\src\\Phonebook\\ContactList\\index.js",[],"E:\\Development\\goit-react-hw-02-phonebook\\src\\Phonebook\\ContactForm\\index.js",[],"E:\\Development\\goit-react-hw-02-phonebook\\src\\Phonebook\\ContactForm\\ContactForm.js",[],"E:\\Development\\goit-react-hw-02-phonebook\\src\\Phonebook\\Filter\\Filter.js",[],"E:\\Development\\goit-react-hw-02-phonebook\\src\\Phonebook\\ContactList\\ContactList.js",[],"E:\\Development\\goit-react-hw-02-phonebook\\src\\Phonebook\\IconButton\\IconButton.js",[],"E:\\Development\\goit-react-hw-02-phonebook\\src\\Phonebook\\MyPnotify\\MyPnotify.js",[],"E:\\Development\\goit-react-hw-02-phonebook\\src\\Container\\index.js",[],"E:\\Development\\goit-react-hw-02-phonebook\\src\\Container\\Container.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":9,"column":10,"nodeType":"61","messageId":"62","endLine":9,"endColumn":23},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'CSSTransition' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]